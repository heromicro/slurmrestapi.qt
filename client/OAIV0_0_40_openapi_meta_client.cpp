/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV0_0_40_openapi_meta_client.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV0_0_40_openapi_meta_client::OAIV0_0_40_openapi_meta_client(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV0_0_40_openapi_meta_client::OAIV0_0_40_openapi_meta_client() {
    this->initializeModel();
}

OAIV0_0_40_openapi_meta_client::~OAIV0_0_40_openapi_meta_client() {}

void OAIV0_0_40_openapi_meta_client::initializeModel() {

    m_source_isSet = false;
    m_source_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;

    m_group_isSet = false;
    m_group_isValid = false;
}

void OAIV0_0_40_openapi_meta_client::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV0_0_40_openapi_meta_client::fromJsonObject(QJsonObject json) {

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;

    m_group_isValid = ::OpenAPI::fromJsonValue(m_group, json[QString("group")]);
    m_group_isSet = !json[QString("group")].isNull() && m_group_isValid;
}

QString OAIV0_0_40_openapi_meta_client::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV0_0_40_openapi_meta_client::asJsonObject() const {
    QJsonObject obj;
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_user_isSet) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    if (m_group_isSet) {
        obj.insert(QString("group"), ::OpenAPI::toJsonValue(m_group));
    }
    return obj;
}

QString OAIV0_0_40_openapi_meta_client::getSource() const {
    return m_source;
}
void OAIV0_0_40_openapi_meta_client::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIV0_0_40_openapi_meta_client::is_source_Set() const{
    return m_source_isSet;
}

bool OAIV0_0_40_openapi_meta_client::is_source_Valid() const{
    return m_source_isValid;
}

QString OAIV0_0_40_openapi_meta_client::getUser() const {
    return m_user;
}
void OAIV0_0_40_openapi_meta_client::setUser(const QString &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIV0_0_40_openapi_meta_client::is_user_Set() const{
    return m_user_isSet;
}

bool OAIV0_0_40_openapi_meta_client::is_user_Valid() const{
    return m_user_isValid;
}

QString OAIV0_0_40_openapi_meta_client::getGroup() const {
    return m_group;
}
void OAIV0_0_40_openapi_meta_client::setGroup(const QString &group) {
    m_group = group;
    m_group_isSet = true;
}

bool OAIV0_0_40_openapi_meta_client::is_group_Set() const{
    return m_group_isSet;
}

bool OAIV0_0_40_openapi_meta_client::is_group_Valid() const{
    return m_group_isValid;
}

bool OAIV0_0_40_openapi_meta_client::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV0_0_40_openapi_meta_client::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
