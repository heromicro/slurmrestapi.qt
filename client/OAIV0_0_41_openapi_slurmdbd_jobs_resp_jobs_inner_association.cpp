/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace hm:slurm:client {

OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association() {
    this->initializeModel();
}

OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::~OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association() {}

void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;

    m_cluster_isSet = false;
    m_cluster_isValid = false;

    m_partition_isSet = false;
    m_partition_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;
}

void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::hm:slurm:client::fromJsonValue(m_account, json[QString("account")]);
    m_account_isSet = !json[QString("account")].isNull() && m_account_isValid;

    m_cluster_isValid = ::hm:slurm:client::fromJsonValue(m_cluster, json[QString("cluster")]);
    m_cluster_isSet = !json[QString("cluster")].isNull() && m_cluster_isValid;

    m_partition_isValid = ::hm:slurm:client::fromJsonValue(m_partition, json[QString("partition")]);
    m_partition_isSet = !json[QString("partition")].isNull() && m_partition_isValid;

    m_user_isValid = ::hm:slurm:client::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;

    m_id_isValid = ::hm:slurm:client::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::asJsonObject() const {
    QJsonObject obj;
    if (m_account_isSet) {
        obj.insert(QString("account"), ::hm:slurm:client::toJsonValue(m_account));
    }
    if (m_cluster_isSet) {
        obj.insert(QString("cluster"), ::hm:slurm:client::toJsonValue(m_cluster));
    }
    if (m_partition_isSet) {
        obj.insert(QString("partition"), ::hm:slurm:client::toJsonValue(m_partition));
    }
    if (m_user_isSet) {
        obj.insert(QString("user"), ::hm:slurm:client::toJsonValue(m_user));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::hm:slurm:client::toJsonValue(m_id));
    }
    return obj;
}

QString OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::getAccount() const {
    return m_account;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::setAccount(const QString &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::is_account_Set() const{
    return m_account_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::is_account_Valid() const{
    return m_account_isValid;
}

QString OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::getCluster() const {
    return m_cluster;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::setCluster(const QString &cluster) {
    m_cluster = cluster;
    m_cluster_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::is_cluster_Set() const{
    return m_cluster_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::is_cluster_Valid() const{
    return m_cluster_isValid;
}

QString OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::getPartition() const {
    return m_partition;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::setPartition(const QString &partition) {
    m_partition = partition;
    m_partition_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::is_partition_Set() const{
    return m_partition_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::is_partition_Valid() const{
    return m_partition_isValid;
}

QString OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::getUser() const {
    return m_user;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::setUser(const QString &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::is_user_Set() const{
    return m_user_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::is_user_Valid() const{
    return m_user_isValid;
}

qint32 OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::getId() const {
    return m_id;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::is_id_Set() const{
    return m_id_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cluster_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_partition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_association::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_user_isValid && true;
}

} // namespace hm:slurm:client
