/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner.h
 *
 * RPCs by type
 */

#ifndef OAIV0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_H
#define OAIV0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_H

#include <QJsonObject>

#include "OAIV0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_average_time.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIV0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_average_time;

class OAIV0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner : public OAIObject {
public:
    OAIV0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner();
    OAIV0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner(QString json);
    ~OAIV0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getTypeId() const;
    void setTypeId(const qint32 &type_id);
    bool is_type_id_Set() const;
    bool is_type_id_Valid() const;

    QString getMessageType() const;
    void setMessageType(const QString &message_type);
    bool is_message_type_Set() const;
    bool is_message_type_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    qint32 getQueued() const;
    void setQueued(const qint32 &queued);
    bool is_queued_Set() const;
    bool is_queued_Valid() const;

    qint64 getDropped() const;
    void setDropped(const qint64 &dropped);
    bool is_dropped_Set() const;
    bool is_dropped_Valid() const;

    qint32 getCycleLast() const;
    void setCycleLast(const qint32 &cycle_last);
    bool is_cycle_last_Set() const;
    bool is_cycle_last_Valid() const;

    qint32 getCycleMax() const;
    void setCycleMax(const qint32 &cycle_max);
    bool is_cycle_max_Set() const;
    bool is_cycle_max_Valid() const;

    qint64 getTotalTime() const;
    void setTotalTime(const qint64 &total_time);
    bool is_total_time_Set() const;
    bool is_total_time_Valid() const;

    OAIV0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_average_time getAverageTime() const;
    void setAverageTime(const OAIV0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_average_time &average_time);
    bool is_average_time_Set() const;
    bool is_average_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_type_id;
    bool m_type_id_isSet;
    bool m_type_id_isValid;

    QString m_message_type;
    bool m_message_type_isSet;
    bool m_message_type_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    qint32 m_queued;
    bool m_queued_isSet;
    bool m_queued_isValid;

    qint64 m_dropped;
    bool m_dropped_isSet;
    bool m_dropped_isValid;

    qint32 m_cycle_last;
    bool m_cycle_last_isSet;
    bool m_cycle_last_isValid;

    qint32 m_cycle_max;
    bool m_cycle_max_isSet;
    bool m_cycle_max_isValid;

    qint64 m_total_time;
    bool m_total_time_isSet;
    bool m_total_time_isValid;

    OAIV0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_average_time m_average_time;
    bool m_average_time_isSet;
    bool m_average_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIV0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner)

#endif // OAIV0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_H
