/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner() {
    this->initializeModel();
}

OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::~OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner() {}

void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::initializeModel() {

    m_time_isSet = false;
    m_time_isValid = false;

    m_exit_code_isSet = false;
    m_exit_code_isValid = false;

    m_nodes_isSet = false;
    m_nodes_isValid = false;

    m_tasks_isSet = false;
    m_tasks_isValid = false;

    m_pid_isSet = false;
    m_pid_isValid = false;

    m_cpu_isSet = false;
    m_cpu_isValid = false;

    m_kill_request_user_isSet = false;
    m_kill_request_user_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_statistics_isSet = false;
    m_statistics_isValid = false;

    m_step_isSet = false;
    m_step_isValid = false;

    m_task_isSet = false;
    m_task_isValid = false;

    m_tres_isSet = false;
    m_tres_isValid = false;
}

void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::fromJsonObject(QJsonObject json) {

    m_time_isValid = ::OpenAPI::fromJsonValue(m_time, json[QString("time")]);
    m_time_isSet = !json[QString("time")].isNull() && m_time_isValid;

    m_exit_code_isValid = ::OpenAPI::fromJsonValue(m_exit_code, json[QString("exit_code")]);
    m_exit_code_isSet = !json[QString("exit_code")].isNull() && m_exit_code_isValid;

    m_nodes_isValid = ::OpenAPI::fromJsonValue(m_nodes, json[QString("nodes")]);
    m_nodes_isSet = !json[QString("nodes")].isNull() && m_nodes_isValid;

    m_tasks_isValid = ::OpenAPI::fromJsonValue(m_tasks, json[QString("tasks")]);
    m_tasks_isSet = !json[QString("tasks")].isNull() && m_tasks_isValid;

    m_pid_isValid = ::OpenAPI::fromJsonValue(m_pid, json[QString("pid")]);
    m_pid_isSet = !json[QString("pid")].isNull() && m_pid_isValid;

    m_cpu_isValid = ::OpenAPI::fromJsonValue(m_cpu, json[QString("CPU")]);
    m_cpu_isSet = !json[QString("CPU")].isNull() && m_cpu_isValid;

    m_kill_request_user_isValid = ::OpenAPI::fromJsonValue(m_kill_request_user, json[QString("kill_request_user")]);
    m_kill_request_user_isSet = !json[QString("kill_request_user")].isNull() && m_kill_request_user_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_statistics_isValid = ::OpenAPI::fromJsonValue(m_statistics, json[QString("statistics")]);
    m_statistics_isSet = !json[QString("statistics")].isNull() && m_statistics_isValid;

    m_step_isValid = ::OpenAPI::fromJsonValue(m_step, json[QString("step")]);
    m_step_isSet = !json[QString("step")].isNull() && m_step_isValid;

    m_task_isValid = ::OpenAPI::fromJsonValue(m_task, json[QString("task")]);
    m_task_isSet = !json[QString("task")].isNull() && m_task_isValid;

    m_tres_isValid = ::OpenAPI::fromJsonValue(m_tres, json[QString("tres")]);
    m_tres_isSet = !json[QString("tres")].isNull() && m_tres_isValid;
}

QString OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_time.isSet()) {
        obj.insert(QString("time"), ::OpenAPI::toJsonValue(m_time));
    }
    if (m_exit_code.isSet()) {
        obj.insert(QString("exit_code"), ::OpenAPI::toJsonValue(m_exit_code));
    }
    if (m_nodes.isSet()) {
        obj.insert(QString("nodes"), ::OpenAPI::toJsonValue(m_nodes));
    }
    if (m_tasks.isSet()) {
        obj.insert(QString("tasks"), ::OpenAPI::toJsonValue(m_tasks));
    }
    if (m_pid_isSet) {
        obj.insert(QString("pid"), ::OpenAPI::toJsonValue(m_pid));
    }
    if (m_cpu.isSet()) {
        obj.insert(QString("CPU"), ::OpenAPI::toJsonValue(m_cpu));
    }
    if (m_kill_request_user_isSet) {
        obj.insert(QString("kill_request_user"), ::OpenAPI::toJsonValue(m_kill_request_user));
    }
    if (m_state.size() > 0) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_statistics.isSet()) {
        obj.insert(QString("statistics"), ::OpenAPI::toJsonValue(m_statistics));
    }
    if (m_step.isSet()) {
        obj.insert(QString("step"), ::OpenAPI::toJsonValue(m_step));
    }
    if (m_task.isSet()) {
        obj.insert(QString("task"), ::OpenAPI::toJsonValue(m_task));
    }
    if (m_tres.isSet()) {
        obj.insert(QString("tres"), ::OpenAPI::toJsonValue(m_tres));
    }
    return obj;
}

OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_time OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::getTime() const {
    return m_time;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::setTime(const OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_time &time) {
    m_time = time;
    m_time_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_time_Set() const{
    return m_time_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_time_Valid() const{
    return m_time_isValid;
}

OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_exit_code OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::getExitCode() const {
    return m_exit_code;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::setExitCode(const OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_exit_code &exit_code) {
    m_exit_code = exit_code;
    m_exit_code_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_exit_code_Set() const{
    return m_exit_code_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_exit_code_Valid() const{
    return m_exit_code_isValid;
}

OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_nodes OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::getNodes() const {
    return m_nodes;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::setNodes(const OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_nodes &nodes) {
    m_nodes = nodes;
    m_nodes_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_nodes_Set() const{
    return m_nodes_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_nodes_Valid() const{
    return m_nodes_isValid;
}

OAIV0_0_40_step_tasks OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::getTasks() const {
    return m_tasks;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::setTasks(const OAIV0_0_40_step_tasks &tasks) {
    m_tasks = tasks;
    m_tasks_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_tasks_Set() const{
    return m_tasks_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_tasks_Valid() const{
    return m_tasks_isValid;
}

QString OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::getPid() const {
    return m_pid;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::setPid(const QString &pid) {
    m_pid = pid;
    m_pid_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_pid_Set() const{
    return m_pid_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_pid_Valid() const{
    return m_pid_isValid;
}

OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_CPU OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::getCpu() const {
    return m_cpu;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::setCpu(const OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_CPU &cpu) {
    m_cpu = cpu;
    m_cpu_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_cpu_Set() const{
    return m_cpu_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_cpu_Valid() const{
    return m_cpu_isValid;
}

QString OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::getKillRequestUser() const {
    return m_kill_request_user;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::setKillRequestUser(const QString &kill_request_user) {
    m_kill_request_user = kill_request_user;
    m_kill_request_user_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_kill_request_user_Set() const{
    return m_kill_request_user_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_kill_request_user_Valid() const{
    return m_kill_request_user_isValid;
}

QList<QString> OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::getState() const {
    return m_state;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::setState(const QList<QString> &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_state_Set() const{
    return m_state_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_state_Valid() const{
    return m_state_isValid;
}

OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_statistics OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::getStatistics() const {
    return m_statistics;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::setStatistics(const OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_statistics &statistics) {
    m_statistics = statistics;
    m_statistics_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_statistics_Set() const{
    return m_statistics_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_statistics_Valid() const{
    return m_statistics_isValid;
}

OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_step OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::getStep() const {
    return m_step;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::setStep(const OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_step &step) {
    m_step = step;
    m_step_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_step_Set() const{
    return m_step_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_step_Valid() const{
    return m_step_isValid;
}

OAIV0_0_40_step_task OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::getTask() const {
    return m_task;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::setTask(const OAIV0_0_40_step_task &task) {
    m_task = task;
    m_task_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_task_Set() const{
    return m_task_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_task_Valid() const{
    return m_task_isValid;
}

OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::getTres() const {
    return m_tres;
}
void OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::setTres(const OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres &tres) {
    m_tres = tres;
    m_tres_isSet = true;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_tres_Set() const{
    return m_tres_isSet;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::is_tres_Valid() const{
    return m_tres_isValid;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_time.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_exit_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_nodes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tasks.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cpu.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_kill_request_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_statistics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_step.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_task.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tres.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
