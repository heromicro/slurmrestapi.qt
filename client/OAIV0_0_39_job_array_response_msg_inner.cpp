/**
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV0_0_39_job_array_response_msg_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV0_0_39_job_array_response_msg_inner::OAIV0_0_39_job_array_response_msg_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV0_0_39_job_array_response_msg_inner::OAIV0_0_39_job_array_response_msg_inner() {
    this->initializeModel();
}

OAIV0_0_39_job_array_response_msg_inner::~OAIV0_0_39_job_array_response_msg_inner() {}

void OAIV0_0_39_job_array_response_msg_inner::initializeModel() {

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_why_isSet = false;
    m_why_isValid = false;
}

void OAIV0_0_39_job_array_response_msg_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV0_0_39_job_array_response_msg_inner::fromJsonObject(QJsonObject json) {

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("job_id")]);
    m_job_id_isSet = !json[QString("job_id")].isNull() && m_job_id_isValid;

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("error_code")]);
    m_error_code_isSet = !json[QString("error_code")].isNull() && m_error_code_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_why_isValid = ::OpenAPI::fromJsonValue(m_why, json[QString("why")]);
    m_why_isSet = !json[QString("why")].isNull() && m_why_isValid;
}

QString OAIV0_0_39_job_array_response_msg_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV0_0_39_job_array_response_msg_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_job_id_isSet) {
        obj.insert(QString("job_id"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_error_code_isSet) {
        obj.insert(QString("error_code"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_error_isSet) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_why_isSet) {
        obj.insert(QString("why"), ::OpenAPI::toJsonValue(m_why));
    }
    return obj;
}

qint32 OAIV0_0_39_job_array_response_msg_inner::getJobId() const {
    return m_job_id;
}
void OAIV0_0_39_job_array_response_msg_inner::setJobId(const qint32 &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIV0_0_39_job_array_response_msg_inner::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIV0_0_39_job_array_response_msg_inner::is_job_id_Valid() const{
    return m_job_id_isValid;
}

qint32 OAIV0_0_39_job_array_response_msg_inner::getErrorCode() const {
    return m_error_code;
}
void OAIV0_0_39_job_array_response_msg_inner::setErrorCode(const qint32 &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIV0_0_39_job_array_response_msg_inner::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIV0_0_39_job_array_response_msg_inner::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIV0_0_39_job_array_response_msg_inner::getError() const {
    return m_error;
}
void OAIV0_0_39_job_array_response_msg_inner::setError(const QString &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIV0_0_39_job_array_response_msg_inner::is_error_Set() const{
    return m_error_isSet;
}

bool OAIV0_0_39_job_array_response_msg_inner::is_error_Valid() const{
    return m_error_isValid;
}

QString OAIV0_0_39_job_array_response_msg_inner::getWhy() const {
    return m_why;
}
void OAIV0_0_39_job_array_response_msg_inner::setWhy(const QString &why) {
    m_why = why;
    m_why_isSet = true;
}

bool OAIV0_0_39_job_array_response_msg_inner::is_why_Set() const{
    return m_why_isSet;
}

bool OAIV0_0_39_job_array_response_msg_inner::is_why_Valid() const{
    return m_why_isValid;
}

bool OAIV0_0_39_job_array_response_msg_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_why_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV0_0_39_job_array_response_msg_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
