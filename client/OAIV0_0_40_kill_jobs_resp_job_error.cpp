/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV0_0_40_kill_jobs_resp_job_error.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV0_0_40_kill_jobs_resp_job_error::OAIV0_0_40_kill_jobs_resp_job_error(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV0_0_40_kill_jobs_resp_job_error::OAIV0_0_40_kill_jobs_resp_job_error() {
    this->initializeModel();
}

OAIV0_0_40_kill_jobs_resp_job_error::~OAIV0_0_40_kill_jobs_resp_job_error() {}

void OAIV0_0_40_kill_jobs_resp_job_error::initializeModel() {

    m_string_isSet = false;
    m_string_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;
}

void OAIV0_0_40_kill_jobs_resp_job_error::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV0_0_40_kill_jobs_resp_job_error::fromJsonObject(QJsonObject json) {

    m_string_isValid = ::OpenAPI::fromJsonValue(m_string, json[QString("string")]);
    m_string_isSet = !json[QString("string")].isNull() && m_string_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;
}

QString OAIV0_0_40_kill_jobs_resp_job_error::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV0_0_40_kill_jobs_resp_job_error::asJsonObject() const {
    QJsonObject obj;
    if (m_string_isSet) {
        obj.insert(QString("string"), ::OpenAPI::toJsonValue(m_string));
    }
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    return obj;
}

QString OAIV0_0_40_kill_jobs_resp_job_error::getString() const {
    return m_string;
}
void OAIV0_0_40_kill_jobs_resp_job_error::setString(const QString &string) {
    m_string = string;
    m_string_isSet = true;
}

bool OAIV0_0_40_kill_jobs_resp_job_error::is_string_Set() const{
    return m_string_isSet;
}

bool OAIV0_0_40_kill_jobs_resp_job_error::is_string_Valid() const{
    return m_string_isValid;
}

qint32 OAIV0_0_40_kill_jobs_resp_job_error::getCode() const {
    return m_code;
}
void OAIV0_0_40_kill_jobs_resp_job_error::setCode(const qint32 &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIV0_0_40_kill_jobs_resp_job_error::is_code_Set() const{
    return m_code_isSet;
}

bool OAIV0_0_40_kill_jobs_resp_job_error::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIV0_0_40_kill_jobs_resp_job_error::getMessage() const {
    return m_message;
}
void OAIV0_0_40_kill_jobs_resp_job_error::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIV0_0_40_kill_jobs_resp_job_error::is_message_Set() const{
    return m_message_isSet;
}

bool OAIV0_0_40_kill_jobs_resp_job_error::is_message_Valid() const{
    return m_message_isValid;
}

bool OAIV0_0_40_kill_jobs_resp_job_error::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_string_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV0_0_40_kill_jobs_resp_job_error::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
