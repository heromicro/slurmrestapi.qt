/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV0_0_39_job_res.h
 *
 * 
 */

#ifndef OAIV0_0_39_job_res_H
#define OAIV0_0_39_job_res_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace hm:slurm:client {

class OAIV0_0_39_job_res : public OAIObject {
public:
    OAIV0_0_39_job_res();
    OAIV0_0_39_job_res(QString json);
    ~OAIV0_0_39_job_res() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNodes() const;
    void setNodes(const QString &nodes);
    bool is_nodes_Set() const;
    bool is_nodes_Valid() const;

    qint32 getAllocatedCores() const;
    void setAllocatedCores(const qint32 &allocated_cores);
    bool is_allocated_cores_Set() const;
    bool is_allocated_cores_Valid() const;

    qint32 getAllocatedCpus() const;
    void setAllocatedCpus(const qint32 &allocated_cpus);
    bool is_allocated_cpus_Set() const;
    bool is_allocated_cpus_Valid() const;

    qint32 getAllocatedHosts() const;
    void setAllocatedHosts(const qint32 &allocated_hosts);
    bool is_allocated_hosts_Set() const;
    bool is_allocated_hosts_Valid() const;

    QList<QJsonValue> getAllocatedNodes() const;
    void setAllocatedNodes(const QList<QJsonValue> &allocated_nodes);
    bool is_allocated_nodes_Set() const;
    bool is_allocated_nodes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_nodes;
    bool m_nodes_isSet;
    bool m_nodes_isValid;

    qint32 m_allocated_cores;
    bool m_allocated_cores_isSet;
    bool m_allocated_cores_isValid;

    qint32 m_allocated_cpus;
    bool m_allocated_cpus_isSet;
    bool m_allocated_cpus_isValid;

    qint32 m_allocated_hosts;
    bool m_allocated_hosts_isSet;
    bool m_allocated_hosts_isValid;

    QList<QJsonValue> m_allocated_nodes;
    bool m_allocated_nodes_isSet;
    bool m_allocated_nodes_isValid;
};

} // namespace hm:slurm:client

Q_DECLARE_METATYPE(hm:slurm:client::OAIV0_0_39_job_res)

#endif // OAIV0_0_39_job_res_H
