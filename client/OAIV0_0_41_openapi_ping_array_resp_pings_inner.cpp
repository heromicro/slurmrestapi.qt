/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV0_0_41_openapi_ping_array_resp_pings_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV0_0_41_openapi_ping_array_resp_pings_inner::OAIV0_0_41_openapi_ping_array_resp_pings_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV0_0_41_openapi_ping_array_resp_pings_inner::OAIV0_0_41_openapi_ping_array_resp_pings_inner() {
    this->initializeModel();
}

OAIV0_0_41_openapi_ping_array_resp_pings_inner::~OAIV0_0_41_openapi_ping_array_resp_pings_inner() {}

void OAIV0_0_41_openapi_ping_array_resp_pings_inner::initializeModel() {

    m_hostname_isSet = false;
    m_hostname_isValid = false;

    m_pinged_isSet = false;
    m_pinged_isValid = false;

    m_latency_isSet = false;
    m_latency_isValid = false;

    m_mode_isSet = false;
    m_mode_isValid = false;
}

void OAIV0_0_41_openapi_ping_array_resp_pings_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV0_0_41_openapi_ping_array_resp_pings_inner::fromJsonObject(QJsonObject json) {

    m_hostname_isValid = ::OpenAPI::fromJsonValue(m_hostname, json[QString("hostname")]);
    m_hostname_isSet = !json[QString("hostname")].isNull() && m_hostname_isValid;

    m_pinged_isValid = ::OpenAPI::fromJsonValue(m_pinged, json[QString("pinged")]);
    m_pinged_isSet = !json[QString("pinged")].isNull() && m_pinged_isValid;

    m_latency_isValid = ::OpenAPI::fromJsonValue(m_latency, json[QString("latency")]);
    m_latency_isSet = !json[QString("latency")].isNull() && m_latency_isValid;

    m_mode_isValid = ::OpenAPI::fromJsonValue(m_mode, json[QString("mode")]);
    m_mode_isSet = !json[QString("mode")].isNull() && m_mode_isValid;
}

QString OAIV0_0_41_openapi_ping_array_resp_pings_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV0_0_41_openapi_ping_array_resp_pings_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_hostname_isSet) {
        obj.insert(QString("hostname"), ::OpenAPI::toJsonValue(m_hostname));
    }
    if (m_pinged_isSet) {
        obj.insert(QString("pinged"), ::OpenAPI::toJsonValue(m_pinged));
    }
    if (m_latency_isSet) {
        obj.insert(QString("latency"), ::OpenAPI::toJsonValue(m_latency));
    }
    if (m_mode_isSet) {
        obj.insert(QString("mode"), ::OpenAPI::toJsonValue(m_mode));
    }
    return obj;
}

QString OAIV0_0_41_openapi_ping_array_resp_pings_inner::getHostname() const {
    return m_hostname;
}
void OAIV0_0_41_openapi_ping_array_resp_pings_inner::setHostname(const QString &hostname) {
    m_hostname = hostname;
    m_hostname_isSet = true;
}

bool OAIV0_0_41_openapi_ping_array_resp_pings_inner::is_hostname_Set() const{
    return m_hostname_isSet;
}

bool OAIV0_0_41_openapi_ping_array_resp_pings_inner::is_hostname_Valid() const{
    return m_hostname_isValid;
}

QString OAIV0_0_41_openapi_ping_array_resp_pings_inner::getPinged() const {
    return m_pinged;
}
void OAIV0_0_41_openapi_ping_array_resp_pings_inner::setPinged(const QString &pinged) {
    m_pinged = pinged;
    m_pinged_isSet = true;
}

bool OAIV0_0_41_openapi_ping_array_resp_pings_inner::is_pinged_Set() const{
    return m_pinged_isSet;
}

bool OAIV0_0_41_openapi_ping_array_resp_pings_inner::is_pinged_Valid() const{
    return m_pinged_isValid;
}

qint64 OAIV0_0_41_openapi_ping_array_resp_pings_inner::getLatency() const {
    return m_latency;
}
void OAIV0_0_41_openapi_ping_array_resp_pings_inner::setLatency(const qint64 &latency) {
    m_latency = latency;
    m_latency_isSet = true;
}

bool OAIV0_0_41_openapi_ping_array_resp_pings_inner::is_latency_Set() const{
    return m_latency_isSet;
}

bool OAIV0_0_41_openapi_ping_array_resp_pings_inner::is_latency_Valid() const{
    return m_latency_isValid;
}

QString OAIV0_0_41_openapi_ping_array_resp_pings_inner::getMode() const {
    return m_mode;
}
void OAIV0_0_41_openapi_ping_array_resp_pings_inner::setMode(const QString &mode) {
    m_mode = mode;
    m_mode_isSet = true;
}

bool OAIV0_0_41_openapi_ping_array_resp_pings_inner::is_mode_Set() const{
    return m_mode_isSet;
}

bool OAIV0_0_41_openapi_ping_array_resp_pings_inner::is_mode_Valid() const{
    return m_mode_isValid;
}

bool OAIV0_0_41_openapi_ping_array_resp_pings_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hostname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pinged_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV0_0_41_openapi_ping_array_resp_pings_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
