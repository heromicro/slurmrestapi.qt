/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association() {
    this->initializeModel();
}

OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::~OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association() {}

void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::initializeModel() {

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_defaultqos_isSet = false;
    m_defaultqos_isValid = false;

    m_grpjobs_isSet = false;
    m_grpjobs_isValid = false;

    m_grpjobsaccrue_isSet = false;
    m_grpjobsaccrue_isValid = false;

    m_grpsubmitjobs_isSet = false;
    m_grpsubmitjobs_isValid = false;

    m_grptres_isSet = false;
    m_grptres_isValid = false;

    m_grptresmins_isSet = false;
    m_grptresmins_isValid = false;

    m_grptresrunmins_isSet = false;
    m_grptresrunmins_isValid = false;

    m_grpwall_isSet = false;
    m_grpwall_isValid = false;

    m_maxjobs_isSet = false;
    m_maxjobs_isValid = false;

    m_maxjobsaccrue_isSet = false;
    m_maxjobsaccrue_isValid = false;

    m_maxsubmitjobs_isSet = false;
    m_maxsubmitjobs_isValid = false;

    m_maxtresminsperjob_isSet = false;
    m_maxtresminsperjob_isValid = false;

    m_maxtresrunmins_isSet = false;
    m_maxtresrunmins_isValid = false;

    m_maxtresperjob_isSet = false;
    m_maxtresperjob_isValid = false;

    m_maxtrespernode_isSet = false;
    m_maxtrespernode_isValid = false;

    m_maxwalldurationperjob_isSet = false;
    m_maxwalldurationperjob_isValid = false;

    m_minpriothresh_isSet = false;
    m_minpriothresh_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_qoslevel_isSet = false;
    m_qoslevel_isValid = false;

    m_fairshare_isSet = false;
    m_fairshare_isValid = false;
}

void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::fromJsonObject(QJsonObject json) {

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_defaultqos_isValid = ::OpenAPI::fromJsonValue(m_defaultqos, json[QString("defaultqos")]);
    m_defaultqos_isSet = !json[QString("defaultqos")].isNull() && m_defaultqos_isValid;

    m_grpjobs_isValid = ::OpenAPI::fromJsonValue(m_grpjobs, json[QString("grpjobs")]);
    m_grpjobs_isSet = !json[QString("grpjobs")].isNull() && m_grpjobs_isValid;

    m_grpjobsaccrue_isValid = ::OpenAPI::fromJsonValue(m_grpjobsaccrue, json[QString("grpjobsaccrue")]);
    m_grpjobsaccrue_isSet = !json[QString("grpjobsaccrue")].isNull() && m_grpjobsaccrue_isValid;

    m_grpsubmitjobs_isValid = ::OpenAPI::fromJsonValue(m_grpsubmitjobs, json[QString("grpsubmitjobs")]);
    m_grpsubmitjobs_isSet = !json[QString("grpsubmitjobs")].isNull() && m_grpsubmitjobs_isValid;

    m_grptres_isValid = ::OpenAPI::fromJsonValue(m_grptres, json[QString("grptres")]);
    m_grptres_isSet = !json[QString("grptres")].isNull() && m_grptres_isValid;

    m_grptresmins_isValid = ::OpenAPI::fromJsonValue(m_grptresmins, json[QString("grptresmins")]);
    m_grptresmins_isSet = !json[QString("grptresmins")].isNull() && m_grptresmins_isValid;

    m_grptresrunmins_isValid = ::OpenAPI::fromJsonValue(m_grptresrunmins, json[QString("grptresrunmins")]);
    m_grptresrunmins_isSet = !json[QString("grptresrunmins")].isNull() && m_grptresrunmins_isValid;

    m_grpwall_isValid = ::OpenAPI::fromJsonValue(m_grpwall, json[QString("grpwall")]);
    m_grpwall_isSet = !json[QString("grpwall")].isNull() && m_grpwall_isValid;

    m_maxjobs_isValid = ::OpenAPI::fromJsonValue(m_maxjobs, json[QString("maxjobs")]);
    m_maxjobs_isSet = !json[QString("maxjobs")].isNull() && m_maxjobs_isValid;

    m_maxjobsaccrue_isValid = ::OpenAPI::fromJsonValue(m_maxjobsaccrue, json[QString("maxjobsaccrue")]);
    m_maxjobsaccrue_isSet = !json[QString("maxjobsaccrue")].isNull() && m_maxjobsaccrue_isValid;

    m_maxsubmitjobs_isValid = ::OpenAPI::fromJsonValue(m_maxsubmitjobs, json[QString("maxsubmitjobs")]);
    m_maxsubmitjobs_isSet = !json[QString("maxsubmitjobs")].isNull() && m_maxsubmitjobs_isValid;

    m_maxtresminsperjob_isValid = ::OpenAPI::fromJsonValue(m_maxtresminsperjob, json[QString("maxtresminsperjob")]);
    m_maxtresminsperjob_isSet = !json[QString("maxtresminsperjob")].isNull() && m_maxtresminsperjob_isValid;

    m_maxtresrunmins_isValid = ::OpenAPI::fromJsonValue(m_maxtresrunmins, json[QString("maxtresrunmins")]);
    m_maxtresrunmins_isSet = !json[QString("maxtresrunmins")].isNull() && m_maxtresrunmins_isValid;

    m_maxtresperjob_isValid = ::OpenAPI::fromJsonValue(m_maxtresperjob, json[QString("maxtresperjob")]);
    m_maxtresperjob_isSet = !json[QString("maxtresperjob")].isNull() && m_maxtresperjob_isValid;

    m_maxtrespernode_isValid = ::OpenAPI::fromJsonValue(m_maxtrespernode, json[QString("maxtrespernode")]);
    m_maxtrespernode_isSet = !json[QString("maxtrespernode")].isNull() && m_maxtrespernode_isValid;

    m_maxwalldurationperjob_isValid = ::OpenAPI::fromJsonValue(m_maxwalldurationperjob, json[QString("maxwalldurationperjob")]);
    m_maxwalldurationperjob_isSet = !json[QString("maxwalldurationperjob")].isNull() && m_maxwalldurationperjob_isValid;

    m_minpriothresh_isValid = ::OpenAPI::fromJsonValue(m_minpriothresh, json[QString("minpriothresh")]);
    m_minpriothresh_isSet = !json[QString("minpriothresh")].isNull() && m_minpriothresh_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;

    m_qoslevel_isValid = ::OpenAPI::fromJsonValue(m_qoslevel, json[QString("qoslevel")]);
    m_qoslevel_isSet = !json[QString("qoslevel")].isNull() && m_qoslevel_isValid;

    m_fairshare_isValid = ::OpenAPI::fromJsonValue(m_fairshare, json[QString("fairshare")]);
    m_fairshare_isSet = !json[QString("fairshare")].isNull() && m_fairshare_isValid;
}

QString OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::asJsonObject() const {
    QJsonObject obj;
    if (m_comment_isSet) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_defaultqos_isSet) {
        obj.insert(QString("defaultqos"), ::OpenAPI::toJsonValue(m_defaultqos));
    }
    if (m_grpjobs.isSet()) {
        obj.insert(QString("grpjobs"), ::OpenAPI::toJsonValue(m_grpjobs));
    }
    if (m_grpjobsaccrue.isSet()) {
        obj.insert(QString("grpjobsaccrue"), ::OpenAPI::toJsonValue(m_grpjobsaccrue));
    }
    if (m_grpsubmitjobs.isSet()) {
        obj.insert(QString("grpsubmitjobs"), ::OpenAPI::toJsonValue(m_grpsubmitjobs));
    }
    if (m_grptres.size() > 0) {
        obj.insert(QString("grptres"), ::OpenAPI::toJsonValue(m_grptres));
    }
    if (m_grptresmins.size() > 0) {
        obj.insert(QString("grptresmins"), ::OpenAPI::toJsonValue(m_grptresmins));
    }
    if (m_grptresrunmins.size() > 0) {
        obj.insert(QString("grptresrunmins"), ::OpenAPI::toJsonValue(m_grptresrunmins));
    }
    if (m_grpwall.isSet()) {
        obj.insert(QString("grpwall"), ::OpenAPI::toJsonValue(m_grpwall));
    }
    if (m_maxjobs.isSet()) {
        obj.insert(QString("maxjobs"), ::OpenAPI::toJsonValue(m_maxjobs));
    }
    if (m_maxjobsaccrue.isSet()) {
        obj.insert(QString("maxjobsaccrue"), ::OpenAPI::toJsonValue(m_maxjobsaccrue));
    }
    if (m_maxsubmitjobs.isSet()) {
        obj.insert(QString("maxsubmitjobs"), ::OpenAPI::toJsonValue(m_maxsubmitjobs));
    }
    if (m_maxtresminsperjob.size() > 0) {
        obj.insert(QString("maxtresminsperjob"), ::OpenAPI::toJsonValue(m_maxtresminsperjob));
    }
    if (m_maxtresrunmins.size() > 0) {
        obj.insert(QString("maxtresrunmins"), ::OpenAPI::toJsonValue(m_maxtresrunmins));
    }
    if (m_maxtresperjob.size() > 0) {
        obj.insert(QString("maxtresperjob"), ::OpenAPI::toJsonValue(m_maxtresperjob));
    }
    if (m_maxtrespernode.size() > 0) {
        obj.insert(QString("maxtrespernode"), ::OpenAPI::toJsonValue(m_maxtrespernode));
    }
    if (m_maxwalldurationperjob.isSet()) {
        obj.insert(QString("maxwalldurationperjob"), ::OpenAPI::toJsonValue(m_maxwalldurationperjob));
    }
    if (m_minpriothresh.isSet()) {
        obj.insert(QString("minpriothresh"), ::OpenAPI::toJsonValue(m_minpriothresh));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_priority.isSet()) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_qoslevel.size() > 0) {
        obj.insert(QString("qoslevel"), ::OpenAPI::toJsonValue(m_qoslevel));
    }
    if (m_fairshare_isSet) {
        obj.insert(QString("fairshare"), ::OpenAPI::toJsonValue(m_fairshare));
    }
    return obj;
}

QString OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getComment() const {
    return m_comment;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_comment_Valid() const{
    return m_comment_isValid;
}

QString OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getDefaultqos() const {
    return m_defaultqos;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setDefaultqos(const QString &defaultqos) {
    m_defaultqos = defaultqos;
    m_defaultqos_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_defaultqos_Set() const{
    return m_defaultqos_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_defaultqos_Valid() const{
    return m_defaultqos_isValid;
}

OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_grpjobs OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getGrpjobs() const {
    return m_grpjobs;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setGrpjobs(const OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_grpjobs &grpjobs) {
    m_grpjobs = grpjobs;
    m_grpjobs_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_grpjobs_Set() const{
    return m_grpjobs_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_grpjobs_Valid() const{
    return m_grpjobs_isValid;
}

OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_grpjobsaccrue OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getGrpjobsaccrue() const {
    return m_grpjobsaccrue;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setGrpjobsaccrue(const OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_grpjobsaccrue &grpjobsaccrue) {
    m_grpjobsaccrue = grpjobsaccrue;
    m_grpjobsaccrue_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_grpjobsaccrue_Set() const{
    return m_grpjobsaccrue_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_grpjobsaccrue_Valid() const{
    return m_grpjobsaccrue_isValid;
}

OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_grpsubmitjobs OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getGrpsubmitjobs() const {
    return m_grpsubmitjobs;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setGrpsubmitjobs(const OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_grpsubmitjobs &grpsubmitjobs) {
    m_grpsubmitjobs = grpsubmitjobs;
    m_grpsubmitjobs_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_grpsubmitjobs_Set() const{
    return m_grpsubmitjobs_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_grpsubmitjobs_Valid() const{
    return m_grpsubmitjobs_isValid;
}

QList<OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner> OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getGrptres() const {
    return m_grptres;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setGrptres(const QList<OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner> &grptres) {
    m_grptres = grptres;
    m_grptres_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_grptres_Set() const{
    return m_grptres_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_grptres_Valid() const{
    return m_grptres_isValid;
}

QList<OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner> OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getGrptresmins() const {
    return m_grptresmins;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setGrptresmins(const QList<OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner> &grptresmins) {
    m_grptresmins = grptresmins;
    m_grptresmins_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_grptresmins_Set() const{
    return m_grptresmins_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_grptresmins_Valid() const{
    return m_grptresmins_isValid;
}

QList<OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner> OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getGrptresrunmins() const {
    return m_grptresrunmins;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setGrptresrunmins(const QList<OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner> &grptresrunmins) {
    m_grptresrunmins = grptresrunmins;
    m_grptresrunmins_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_grptresrunmins_Set() const{
    return m_grptresrunmins_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_grptresrunmins_Valid() const{
    return m_grptresrunmins_isValid;
}

OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_grpwall OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getGrpwall() const {
    return m_grpwall;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setGrpwall(const OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_grpwall &grpwall) {
    m_grpwall = grpwall;
    m_grpwall_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_grpwall_Set() const{
    return m_grpwall_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_grpwall_Valid() const{
    return m_grpwall_isValid;
}

OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_maxjobs OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getMaxjobs() const {
    return m_maxjobs;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setMaxjobs(const OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_maxjobs &maxjobs) {
    m_maxjobs = maxjobs;
    m_maxjobs_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxjobs_Set() const{
    return m_maxjobs_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxjobs_Valid() const{
    return m_maxjobs_isValid;
}

OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_maxjobsaccrue OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getMaxjobsaccrue() const {
    return m_maxjobsaccrue;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setMaxjobsaccrue(const OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_maxjobsaccrue &maxjobsaccrue) {
    m_maxjobsaccrue = maxjobsaccrue;
    m_maxjobsaccrue_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxjobsaccrue_Set() const{
    return m_maxjobsaccrue_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxjobsaccrue_Valid() const{
    return m_maxjobsaccrue_isValid;
}

OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_maxsubmitjobs OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getMaxsubmitjobs() const {
    return m_maxsubmitjobs;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setMaxsubmitjobs(const OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_maxsubmitjobs &maxsubmitjobs) {
    m_maxsubmitjobs = maxsubmitjobs;
    m_maxsubmitjobs_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxsubmitjobs_Set() const{
    return m_maxsubmitjobs_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxsubmitjobs_Valid() const{
    return m_maxsubmitjobs_isValid;
}

QList<OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner> OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getMaxtresminsperjob() const {
    return m_maxtresminsperjob;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setMaxtresminsperjob(const QList<OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner> &maxtresminsperjob) {
    m_maxtresminsperjob = maxtresminsperjob;
    m_maxtresminsperjob_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxtresminsperjob_Set() const{
    return m_maxtresminsperjob_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxtresminsperjob_Valid() const{
    return m_maxtresminsperjob_isValid;
}

QList<OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner> OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getMaxtresrunmins() const {
    return m_maxtresrunmins;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setMaxtresrunmins(const QList<OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner> &maxtresrunmins) {
    m_maxtresrunmins = maxtresrunmins;
    m_maxtresrunmins_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxtresrunmins_Set() const{
    return m_maxtresrunmins_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxtresrunmins_Valid() const{
    return m_maxtresrunmins_isValid;
}

QList<OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner> OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getMaxtresperjob() const {
    return m_maxtresperjob;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setMaxtresperjob(const QList<OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner> &maxtresperjob) {
    m_maxtresperjob = maxtresperjob;
    m_maxtresperjob_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxtresperjob_Set() const{
    return m_maxtresperjob_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxtresperjob_Valid() const{
    return m_maxtresperjob_isValid;
}

QList<OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner> OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getMaxtrespernode() const {
    return m_maxtrespernode;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setMaxtrespernode(const QList<OAIV0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner> &maxtrespernode) {
    m_maxtrespernode = maxtrespernode;
    m_maxtrespernode_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxtrespernode_Set() const{
    return m_maxtrespernode_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxtrespernode_Valid() const{
    return m_maxtrespernode_isValid;
}

OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_maxwalldurationperjob OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getMaxwalldurationperjob() const {
    return m_maxwalldurationperjob;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setMaxwalldurationperjob(const OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_maxwalldurationperjob &maxwalldurationperjob) {
    m_maxwalldurationperjob = maxwalldurationperjob;
    m_maxwalldurationperjob_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxwalldurationperjob_Set() const{
    return m_maxwalldurationperjob_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_maxwalldurationperjob_Valid() const{
    return m_maxwalldurationperjob_isValid;
}

OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_minpriothresh OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getMinpriothresh() const {
    return m_minpriothresh;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setMinpriothresh(const OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association_minpriothresh &minpriothresh) {
    m_minpriothresh = minpriothresh;
    m_minpriothresh_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_minpriothresh_Set() const{
    return m_minpriothresh_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_minpriothresh_Valid() const{
    return m_minpriothresh_isValid;
}

QString OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getParent() const {
    return m_parent;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_parent_Valid() const{
    return m_parent_isValid;
}

OAIV0_0_41_openapi_slurmdbd_config_resp_associations_inner_priority OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getPriority() const {
    return m_priority;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setPriority(const OAIV0_0_41_openapi_slurmdbd_config_resp_associations_inner_priority &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_priority_Valid() const{
    return m_priority_isValid;
}

QList<QString> OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getQoslevel() const {
    return m_qoslevel;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setQoslevel(const QList<QString> &qoslevel) {
    m_qoslevel = qoslevel;
    m_qoslevel_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_qoslevel_Set() const{
    return m_qoslevel_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_qoslevel_Valid() const{
    return m_qoslevel_isValid;
}

qint32 OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::getFairshare() const {
    return m_fairshare;
}
void OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::setFairshare(const qint32 &fairshare) {
    m_fairshare = fairshare;
    m_fairshare_isSet = true;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_fairshare_Set() const{
    return m_fairshare_isSet;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::is_fairshare_Valid() const{
    return m_fairshare_isValid;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_defaultqos_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_grpjobs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_grpjobsaccrue.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_grpsubmitjobs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_grptres.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_grptresmins.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_grptresrunmins.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_grpwall.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_maxjobs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_maxjobsaccrue.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_maxsubmitjobs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_maxtresminsperjob.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_maxtresrunmins.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_maxtresperjob.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_maxtrespernode.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_maxwalldurationperjob.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_minpriothresh.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_qoslevel.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_fairshare_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV0_0_41_openapi_users_add_cond_resp_association_condition_association::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
