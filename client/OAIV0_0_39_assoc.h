/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV0_0_39_assoc.h
 *
 * 
 */

#ifndef OAIV0_0_39_assoc_H
#define OAIV0_0_39_assoc_H

#include <QJsonObject>

#include "OAIV0_0_39_assoc_default.h"
#include "OAIV0_0_39_assoc_max.h"
#include "OAIV0_0_39_assoc_min.h"
#include "OAIV0_0_39_assoc_usage.h"
#include "OAIV0_0_39_uint32_no_val.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace hm:slurm:client {
class OAIV0_0_39_assoc_default;
class OAIV0_0_39_assoc_max;
class OAIV0_0_39_assoc_min;
class OAIV0_0_39_uint32_no_val;
class OAIV0_0_39_assoc_usage;

class OAIV0_0_39_assoc : public OAIObject {
public:
    OAIV0_0_39_assoc();
    OAIV0_0_39_assoc(QString json);
    ~OAIV0_0_39_assoc() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccount() const;
    void setAccount(const QString &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    QString getCluster() const;
    void setCluster(const QString &cluster);
    bool is_cluster_Set() const;
    bool is_cluster_Valid() const;

    OAIV0_0_39_assoc_default getRDefault() const;
    void setRDefault(const OAIV0_0_39_assoc_default &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    QList<QString> getFlags() const;
    void setFlags(const QList<QString> &flags);
    bool is_flags_Set() const;
    bool is_flags_Valid() const;

    OAIV0_0_39_assoc_max getMax() const;
    void setMax(const OAIV0_0_39_assoc_max &max);
    bool is_max_Set() const;
    bool is_max_Valid() const;

    bool isIsDefault() const;
    void setIsDefault(const bool &is_default);
    bool is_is_default_Set() const;
    bool is_is_default_Valid() const;

    OAIV0_0_39_assoc_min getMin() const;
    void setMin(const OAIV0_0_39_assoc_min &min);
    bool is_min_Set() const;
    bool is_min_Valid() const;

    QString getParentAccount() const;
    void setParentAccount(const QString &parent_account);
    bool is_parent_account_Set() const;
    bool is_parent_account_Valid() const;

    QString getPartition() const;
    void setPartition(const QString &partition);
    bool is_partition_Set() const;
    bool is_partition_Valid() const;

    OAIV0_0_39_uint32_no_val getPriority() const;
    void setPriority(const OAIV0_0_39_uint32_no_val &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QList<QString> getQos() const;
    void setQos(const QList<QString> &qos);
    bool is_qos_Set() const;
    bool is_qos_Valid() const;

    qint32 getSharesRaw() const;
    void setSharesRaw(const qint32 &shares_raw);
    bool is_shares_raw_Set() const;
    bool is_shares_raw_Valid() const;

    OAIV0_0_39_assoc_usage getUsage() const;
    void setUsage(const OAIV0_0_39_assoc_usage &usage);
    bool is_usage_Set() const;
    bool is_usage_Valid() const;

    QString getUser() const;
    void setUser(const QString &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    QString m_cluster;
    bool m_cluster_isSet;
    bool m_cluster_isValid;

    OAIV0_0_39_assoc_default m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    QList<QString> m_flags;
    bool m_flags_isSet;
    bool m_flags_isValid;

    OAIV0_0_39_assoc_max m_max;
    bool m_max_isSet;
    bool m_max_isValid;

    bool m_is_default;
    bool m_is_default_isSet;
    bool m_is_default_isValid;

    OAIV0_0_39_assoc_min m_min;
    bool m_min_isSet;
    bool m_min_isValid;

    QString m_parent_account;
    bool m_parent_account_isSet;
    bool m_parent_account_isValid;

    QString m_partition;
    bool m_partition_isSet;
    bool m_partition_isValid;

    OAIV0_0_39_uint32_no_val m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QList<QString> m_qos;
    bool m_qos_isSet;
    bool m_qos_isValid;

    qint32 m_shares_raw;
    bool m_shares_raw_isSet;
    bool m_shares_raw_isValid;

    OAIV0_0_39_assoc_usage m_usage;
    bool m_usage_isSet;
    bool m_usage_isValid;

    QString m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace hm:slurm:client

Q_DECLARE_METATYPE(hm:slurm:client::OAIV0_0_39_assoc)

#endif // OAIV0_0_39_assoc_H
