/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV0_0_39_qos_preempt.h
 *
 * 
 */

#ifndef OAIV0_0_39_qos_preempt_H
#define OAIV0_0_39_qos_preempt_H

#include <QJsonObject>

#include "OAIV0_0_39_uint32_no_val.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIV0_0_39_uint32_no_val;

class OAIV0_0_39_qos_preempt : public OAIObject {
public:
    OAIV0_0_39_qos_preempt();
    OAIV0_0_39_qos_preempt(QString json);
    ~OAIV0_0_39_qos_preempt() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getList() const;
    void setList(const QList<QString> &list);
    bool is_list_Set() const;
    bool is_list_Valid() const;

    QList<QString> getMode() const;
    void setMode(const QList<QString> &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    OAIV0_0_39_uint32_no_val getExemptTime() const;
    void setExemptTime(const OAIV0_0_39_uint32_no_val &exempt_time);
    bool is_exempt_time_Set() const;
    bool is_exempt_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_list;
    bool m_list_isSet;
    bool m_list_isValid;

    QList<QString> m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    OAIV0_0_39_uint32_no_val m_exempt_time;
    bool m_exempt_time_isSet;
    bool m_exempt_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIV0_0_39_qos_preempt)

#endif // OAIV0_0_39_qos_preempt_H
