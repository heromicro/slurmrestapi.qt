/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV0_0_39_qos_limits.h
 *
 * 
 */

#ifndef OAIV0_0_39_qos_limits_H
#define OAIV0_0_39_qos_limits_H

#include <QJsonObject>

#include "OAIV0_0_39_qos_limits_max.h"
#include "OAIV0_0_39_qos_limits_min.h"
#include "OAIV0_0_39_uint32_no_val.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace hm:slurm:client {
class OAIV0_0_39_uint32_no_val;
class OAIV0_0_39_qos_limits_max;
class OAIV0_0_39_qos_limits_min;

class OAIV0_0_39_qos_limits : public OAIObject {
public:
    OAIV0_0_39_qos_limits();
    OAIV0_0_39_qos_limits(QString json);
    ~OAIV0_0_39_qos_limits() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIV0_0_39_uint32_no_val getGraceTime() const;
    void setGraceTime(const OAIV0_0_39_uint32_no_val &grace_time);
    bool is_grace_time_Set() const;
    bool is_grace_time_Valid() const;

    OAIV0_0_39_qos_limits_max getMax() const;
    void setMax(const OAIV0_0_39_qos_limits_max &max);
    bool is_max_Set() const;
    bool is_max_Valid() const;

    double getFactor() const;
    void setFactor(const double &factor);
    bool is_factor_Set() const;
    bool is_factor_Valid() const;

    OAIV0_0_39_qos_limits_min getMin() const;
    void setMin(const OAIV0_0_39_qos_limits_min &min);
    bool is_min_Set() const;
    bool is_min_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIV0_0_39_uint32_no_val m_grace_time;
    bool m_grace_time_isSet;
    bool m_grace_time_isValid;

    OAIV0_0_39_qos_limits_max m_max;
    bool m_max_isSet;
    bool m_max_isValid;

    double m_factor;
    bool m_factor_isSet;
    bool m_factor_isValid;

    OAIV0_0_39_qos_limits_min m_min;
    bool m_min_isSet;
    bool m_min_isValid;
};

} // namespace hm:slurm:client

Q_DECLARE_METATYPE(hm:slurm:client::OAIV0_0_39_qos_limits)

#endif // OAIV0_0_39_qos_limits_H
