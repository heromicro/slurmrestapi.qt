/**
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV0_0_39_ext_sensors_data.h
 *
 * 
 */

#ifndef OAIV0_0_39_ext_sensors_data_H
#define OAIV0_0_39_ext_sensors_data_H

#include <QJsonObject>

#include "OAIV0_0_39_uint32_no_val.h"
#include "OAIV0_0_39_uint64_no_val.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIV0_0_39_uint64_no_val;
class OAIV0_0_39_uint32_no_val;

class OAIV0_0_39_ext_sensors_data : public OAIObject {
public:
    OAIV0_0_39_ext_sensors_data();
    OAIV0_0_39_ext_sensors_data(QString json);
    ~OAIV0_0_39_ext_sensors_data() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIV0_0_39_uint64_no_val getConsumedEnergy() const;
    void setConsumedEnergy(const OAIV0_0_39_uint64_no_val &consumed_energy);
    bool is_consumed_energy_Set() const;
    bool is_consumed_energy_Valid() const;

    OAIV0_0_39_uint32_no_val getTemperature() const;
    void setTemperature(const OAIV0_0_39_uint32_no_val &temperature);
    bool is_temperature_Set() const;
    bool is_temperature_Valid() const;

    qint64 getEnergyUpdateTime() const;
    void setEnergyUpdateTime(const qint64 &energy_update_time);
    bool is_energy_update_time_Set() const;
    bool is_energy_update_time_Valid() const;

    qint32 getCurrentWatts() const;
    void setCurrentWatts(const qint32 &current_watts);
    bool is_current_watts_Set() const;
    bool is_current_watts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIV0_0_39_uint64_no_val m_consumed_energy;
    bool m_consumed_energy_isSet;
    bool m_consumed_energy_isValid;

    OAIV0_0_39_uint32_no_val m_temperature;
    bool m_temperature_isSet;
    bool m_temperature_isValid;

    qint64 m_energy_update_time;
    bool m_energy_update_time_isSet;
    bool m_energy_update_time_isValid;

    qint32 m_current_watts;
    bool m_current_watts_isSet;
    bool m_current_watts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIV0_0_39_ext_sensors_data)

#endif // OAIV0_0_39_ext_sensors_data_H
