/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV0_0_40_license.h
 *
 * 
 */

#ifndef OAIV0_0_40_license_H
#define OAIV0_0_40_license_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace hm:slurm:client {

class OAIV0_0_40_license : public OAIObject {
public:
    OAIV0_0_40_license();
    OAIV0_0_40_license(QString json);
    ~OAIV0_0_40_license() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLicenseName() const;
    void setLicenseName(const QString &license_name);
    bool is_license_name_Set() const;
    bool is_license_name_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    qint32 getUsed() const;
    void setUsed(const qint32 &used);
    bool is_used_Set() const;
    bool is_used_Valid() const;

    qint32 getFree() const;
    void setFree(const qint32 &free);
    bool is_free_Set() const;
    bool is_free_Valid() const;

    bool isRemote() const;
    void setRemote(const bool &remote);
    bool is_remote_Set() const;
    bool is_remote_Valid() const;

    qint32 getReserved() const;
    void setReserved(const qint32 &reserved);
    bool is_reserved_Set() const;
    bool is_reserved_Valid() const;

    qint32 getLastConsumed() const;
    void setLastConsumed(const qint32 &last_consumed);
    bool is_last_consumed_Set() const;
    bool is_last_consumed_Valid() const;

    qint32 getLastDeficit() const;
    void setLastDeficit(const qint32 &last_deficit);
    bool is_last_deficit_Set() const;
    bool is_last_deficit_Valid() const;

    qint64 getLastUpdate() const;
    void setLastUpdate(const qint64 &last_update);
    bool is_last_update_Set() const;
    bool is_last_update_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_license_name;
    bool m_license_name_isSet;
    bool m_license_name_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    qint32 m_used;
    bool m_used_isSet;
    bool m_used_isValid;

    qint32 m_free;
    bool m_free_isSet;
    bool m_free_isValid;

    bool m_remote;
    bool m_remote_isSet;
    bool m_remote_isValid;

    qint32 m_reserved;
    bool m_reserved_isSet;
    bool m_reserved_isValid;

    qint32 m_last_consumed;
    bool m_last_consumed_isSet;
    bool m_last_consumed_isValid;

    qint32 m_last_deficit;
    bool m_last_deficit_isSet;
    bool m_last_deficit_isValid;

    qint64 m_last_update;
    bool m_last_update_isSet;
    bool m_last_update_isValid;
};

} // namespace hm:slurm:client

Q_DECLARE_METATYPE(hm:slurm:client::OAIV0_0_40_license)

#endif // OAIV0_0_40_license_H
