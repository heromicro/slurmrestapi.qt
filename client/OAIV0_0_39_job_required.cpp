/**
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV0_0_39_job_required.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV0_0_39_job_required::OAIV0_0_39_job_required(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV0_0_39_job_required::OAIV0_0_39_job_required() {
    this->initializeModel();
}

OAIV0_0_39_job_required::~OAIV0_0_39_job_required() {}

void OAIV0_0_39_job_required::initializeModel() {

    m_memory_isSet = false;
    m_memory_isValid = false;
}

void OAIV0_0_39_job_required::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV0_0_39_job_required::fromJsonObject(QJsonObject json) {

    m_memory_isValid = ::OpenAPI::fromJsonValue(m_memory, json[QString("memory")]);
    m_memory_isSet = !json[QString("memory")].isNull() && m_memory_isValid;
}

QString OAIV0_0_39_job_required::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV0_0_39_job_required::asJsonObject() const {
    QJsonObject obj;
    if (m_memory_isSet) {
        obj.insert(QString("memory"), ::OpenAPI::toJsonValue(m_memory));
    }
    return obj;
}

qint64 OAIV0_0_39_job_required::getMemory() const {
    return m_memory;
}
void OAIV0_0_39_job_required::setMemory(const qint64 &memory) {
    m_memory = memory;
    m_memory_isSet = true;
}

bool OAIV0_0_39_job_required::is_memory_Set() const{
    return m_memory_isSet;
}

bool OAIV0_0_39_job_required::is_memory_Valid() const{
    return m_memory_isValid;
}

bool OAIV0_0_39_job_required::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_memory_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV0_0_39_job_required::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
