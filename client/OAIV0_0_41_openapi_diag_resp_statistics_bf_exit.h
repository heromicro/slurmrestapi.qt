/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV0_0_41_openapi_diag_resp_statistics_bf_exit.h
 *
 * Reasons for which the backfill scheduling cycle exited since last reset
 */

#ifndef OAIV0_0_41_openapi_diag_resp_statistics_bf_exit_H
#define OAIV0_0_41_openapi_diag_resp_statistics_bf_exit_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace hm:slurm:client {

class OAIV0_0_41_openapi_diag_resp_statistics_bf_exit : public OAIObject {
public:
    OAIV0_0_41_openapi_diag_resp_statistics_bf_exit();
    OAIV0_0_41_openapi_diag_resp_statistics_bf_exit(QString json);
    ~OAIV0_0_41_openapi_diag_resp_statistics_bf_exit() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getEndJobQueue() const;
    void setEndJobQueue(const qint32 &end_job_queue);
    bool is_end_job_queue_Set() const;
    bool is_end_job_queue_Valid() const;

    qint32 getBfMaxJobStart() const;
    void setBfMaxJobStart(const qint32 &bf_max_job_start);
    bool is_bf_max_job_start_Set() const;
    bool is_bf_max_job_start_Valid() const;

    qint32 getBfMaxJobTest() const;
    void setBfMaxJobTest(const qint32 &bf_max_job_test);
    bool is_bf_max_job_test_Set() const;
    bool is_bf_max_job_test_Valid() const;

    qint32 getBfMaxTime() const;
    void setBfMaxTime(const qint32 &bf_max_time);
    bool is_bf_max_time_Set() const;
    bool is_bf_max_time_Valid() const;

    qint32 getBfNodeSpaceSize() const;
    void setBfNodeSpaceSize(const qint32 &bf_node_space_size);
    bool is_bf_node_space_size_Set() const;
    bool is_bf_node_space_size_Valid() const;

    qint32 getStateChanged() const;
    void setStateChanged(const qint32 &state_changed);
    bool is_state_changed_Set() const;
    bool is_state_changed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_end_job_queue;
    bool m_end_job_queue_isSet;
    bool m_end_job_queue_isValid;

    qint32 m_bf_max_job_start;
    bool m_bf_max_job_start_isSet;
    bool m_bf_max_job_start_isValid;

    qint32 m_bf_max_job_test;
    bool m_bf_max_job_test_isSet;
    bool m_bf_max_job_test_isValid;

    qint32 m_bf_max_time;
    bool m_bf_max_time_isSet;
    bool m_bf_max_time_isValid;

    qint32 m_bf_node_space_size;
    bool m_bf_node_space_size_isSet;
    bool m_bf_node_space_size_isValid;

    qint32 m_state_changed;
    bool m_state_changed_isSet;
    bool m_state_changed_isValid;
};

} // namespace hm:slurm:client

Q_DECLARE_METATYPE(hm:slurm:client::OAIV0_0_41_openapi_diag_resp_statistics_bf_exit)

#endif // OAIV0_0_41_openapi_diag_resp_statistics_bf_exit_H
